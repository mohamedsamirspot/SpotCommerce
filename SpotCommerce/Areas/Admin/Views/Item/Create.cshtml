@model SpotCommerce.Models.ViewModels.ItemViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-info">Create Item</h2>
<br />

<form method="post" asp-action="Create" enctype="multipart/form-data">
    <div class="border backgroundWhite">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.Name" class="col-form-label"></label>

            </div>
            <div class="col-5">
                <input asp-for="Item.Name" class="form-control" />
            </div>
            <span asp-validation-for="Item.Name" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.Description" class="col-form-label"></label>
            </div>
            <div class="col-5">
                @Html.TextAreaFor(m => m.Item.Description)
            </div>
            <span asp-validation-for="Item.Description" class="text-danger"></span>

        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.Price" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input asp-for="Item.Price" class="form-control" />
            </div>
            <span asp-validation-for="Item.Price" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.Image" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <input type="file" name="files" multiple class="form-control" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.CategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.Item.CategoryId" id="CategoryId" asp-items="@(new SelectList(Model.Category,"Id","Name"))" class="form-control"></select>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Item.SubCategoryId" class="col-form-label"></label>
            </div>
            <div class="col-5">
                <select asp-for="@Model.Item.SubCategoryId" name="SubCategoryId" id="SubCategoryId" asp-items="@(new SelectList(string.Empty,"Id","Name"))" class="form-control"></select>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-5 offset-2">
                <partial name="_CreateAndBackToListButton" />
            </div>
        </div>
    </div>
</form>

@section Scripts{


    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: "lists",
            menubar: 'file edit format'
        });

    </script>





    <script>

        function updateSubCategoryList() {
            var categorySelected = document.getElementById("CategoryId").value;
            $list = $('#SubCategoryId');
            $.ajax({
                url: '/Admin/SubCategory/GetSubCategory/' + categorySelected,
                type: 'GET',
                dataType: 'text',
                success: function (data) {
                    results = JSON.parse(data);
                    $list.html('');
                    var items = '';
                    for (i in results) {
                        items += "<option value='" + results[i].value + "'>" + results[i].text + "</option>";
                    }
                    $list.html(items);
                }

            });

        }


        $(document).ready(function () {
            updateSubCategoryList();
        });


        $("#CategoryId").on("change", function () {
            updateSubCategoryList();
        });


    </script>


    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }